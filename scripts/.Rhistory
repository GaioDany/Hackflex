# load libs
library(tidyverse)
library(tidyr)
library(dplyr)
library(ggplot2)
library(readr)
library(ggpubr)
library(weights)
library(readr)
library(stringr)
# set directories
mydir <- "~/Desktop/MG1655/goal_dilution/ecoli/"
phred_dir <- "~/Desktop/MG1655/raw_libs/"
cov_files <- grep(list.files(mydir,pattern="^reduced"),
pattern='.tsv', value=TRUE)
# construct an empty dataframe to build on
df_to_fill <- data.frame(
position = numeric(),
coverage = numeric(),
library = character(),
stringsAsFactors = FALSE
)
for (cov_file in cov_files) {
print(cov_file)
coverage <-read.table(file.path(mydir,cov_file))
colnames(coverage) <- c("position","coverage")
id <- sub(".*interleaved2_", "", cov_file)
id <- sub(".dedup.tsv", "", id)
coverage$library=paste0(as.character(id))
df_to_fill <- rbind(df_to_fill,coverage)
}
p1 <- ggplot(df_to_fill, aes(x=coverage, color=library)) +
geom_histogram(fill="white", alpha=0.5,
position="identity",
binwidth=1)+
facet_grid(rows = vars(library)) +
theme(legend.position="top",
legend.title = element_blank())+
xlim(0,100) +
labs(x="coverage per site",
y="Frequency")
p2 <- df_to_fill %>%
dplyr::filter(coverage <= 3) %>%
ggplot(., aes(x=coverage, color=library)) +
geom_histogram(fill="white", alpha=0.5,
position="identity",
binwidth=1)+
facet_grid(rows = vars(library)) +
theme(legend.position="none")+
xlim(0,4) +
labs(x="coverage per site",
y="Frequency")
p3 <- df_to_fill %>%
dplyr::filter(coverage <= 3) %>%
ggplot(., aes(x=coverage, color=library)) +
geom_histogram(fill="white", alpha=0.5,
position="identity",
binwidth=1)+
facet_grid(rows = vars(library), scales = "free_y") +
theme(legend.position="none")+
xlim(0,4) +
labs(x="coverage per site",
y="Frequency")
# plot
pdf(paste0(mydir,'coverage.pdf'))
ggarrange(p1,                                                 # First row with first plot
ggarrange(p2, p3, ncol = 2, labels = c("B", "C")), # Second row with 2 plots
nrow = 2,
labels = "A"                                        # Labels of the first plot
)
dev.off()
frag_files = list.files(mydir,pattern="frag_sizes")
# construct an empty dataframe to build on
df_to_fill <- data.frame(
V1 = numeric(),
order = numeric(),
library = character(),
stringsAsFactors = FALSE
)
for (frag_file in frag_files) {
# read in file
frag_df <- read.table(file.path(mydir,frag_file), quote="\"", comment.char="")
# transform fragment size values to absolute values (because pos and neg stand for forward and reverse reads)
frag_df$V1 <- abs(frag_df$V1)
# add column with sequential numbers to each dataset
new_df <- cbind( frag_df, order=seq(nrow(frag_df)) )
id <- sub(".*interleaved2_", "", frag_file)
id <- sub(".dedup.txt", "", id)
new_df$library=paste0(as.character(id))
df_to_fill <- rbind(
df_to_fill,
new_df
)
}
head(df_to_fill)
df_to_fill
head(correlation)
head(df_to_fill)
summary(df_to_fill$V1)
summary(df_to_fill$V2)
summary(df_to_fill$order)
coverage
hist(df_to_fill$order)
df_to_fill %>% dplyr::filter(library=="K3_R1")
z <- df_to_fill %>% dplyr::filter(library=="K3_R1")
hist(z)
hist(z$V1)
hist(z$V1, breaks=100)
hist(z$order, breaks=100)
hist(z$order)
cov_files
coverage
coverage$position
summary(coverage$position)
summary(coverage$coverage)
df_to_fill
head(df_to_fill)
coverage
summary(coverage$coverage)
z <- df_to_fill %>% dplyr::filter(library=="K3_R1")
summary(z$order)
summary(z$V1)
coverage <-read.table(file.path(mydir,cov_file))
head(coverage)
cov_file
id
df_to_fill
head(df_to_fill)
max(df_to_fill$order)
max(df_to_fill$V1)
max(df_to_fill$order)
cov_files <- grep(list.files(mydir,pattern="^reduced"),
pattern='.tsv', value=TRUE)
# construct an empty dataframe to build on
df_to_fill <- data.frame(
position = numeric(),
coverage = numeric(),
library = character(),
stringsAsFactors = FALSE
)
for (cov_file in cov_files) {
print(cov_file)
coverage <-read.table(file.path(mydir,cov_file))
head(coverage)
colnames(coverage) <- c("position","coverage")
id <- sub(".*interleaved2_", "", cov_file)
id <- sub(".dedup.tsv", "", id)
coverage$library=paste0(as.character(id))
df_to_fill <- rbind(df_to_fill,coverage)
}
max(df_to_fill$order)
df_to_fill$coverage
summary(df_to_fill$coverage)
# function to get numbers per library:
get_me_stats <- function(DF) {
out <- DF %>%
dplyr::summarise(min=min(counts*2),
median=median(counts*2),
mean=mean(counts*2),
sd=sd(counts*2),
max=max(counts*2),
samples=n(),
sum=sum(counts*2))
return(out)
}
# function to get numbers per library:
get_me_stats <- function(DF) {
out <- DF %>%
dplyr::summarise(min=min(coverage),
median=median(coverage),
mean=mean(coverage),
sd=sd(coverage),
max=max(coverage),
samples=n(),
sum=sum(coverage))
return(out)
}
df_to_fill %>%
group_by(library) %>%
get_me_stats()
# function to get numbers per library:
get_me_stats <- function(DF) {
out <- DF %>%
dplyr::summarise(min=min(coverage),
median=median(coverage),
mean=mean(coverage),
sd=sd(coverage),
max=max(coverage),
points=n(),
cov_sum=sum(coverage))
return(out)
}
df_to_fill %>%
group_by(library) %>%
get_me_stats()
df_to_fill %>%
group_by(library) %>%
get_me_stats()
# mydir <- "~/Desktop/MG1655/goal_polymerase/"
# phred_dir <- "~/Desktop/MG1655/raw_libs/"
#
# mydir <- "~/Desktop/MG1655/goal_KAPA/"
# phred_dir <- "~/Desktop/MG1655/raw_libs/"
#
mydir <- "~/Desktop/MG1655/goal_hackflex/ecoli/"
phred_dir <- "~/Desktop/MG1655/raw_libs/"
cov_files <- grep(list.files(mydir,pattern="^reduced"),
pattern='.tsv', value=TRUE)
# construct an empty dataframe to build on
df_to_fill <- data.frame(
position = numeric(),
coverage = numeric(),
library = character(),
stringsAsFactors = FALSE
)
for (cov_file in cov_files) {
print(cov_file)
coverage <-read.table(file.path(mydir,cov_file))
head(coverage)
colnames(coverage) <- c("position","coverage")
id <- sub(".*interleaved2_", "", cov_file)
id <- sub(".dedup.tsv", "", id)
coverage$library=paste0(as.character(id))
df_to_fill <- rbind(df_to_fill,coverage)
}
# function to get numbers per library:
get_me_stats <- function(DF) {
out <- DF %>%
dplyr::summarise(min=min(coverage),
median=median(coverage),
mean=mean(coverage),
sd=sd(coverage),
max=max(coverage),
points=n(),
cov_sum=sum(coverage))
return(out)
}
df_to_fill %>%
group_by(library) %>%
get_me_stats()
mydir <- "~/Desktop/MG1655/goal_hackflex/paeruginosa/"
phred_dir <- "~/Desktop/MG1655/raw_libs/"
cov_files <- grep(list.files(mydir,pattern="^reduced"),
pattern='.tsv', value=TRUE)
# Coverage:
# construct an empty dataframe to build on
df_to_fill <- data.frame(
position = numeric(),
coverage = numeric(),
library = character(),
stringsAsFactors = FALSE
)
for (cov_file in cov_files) {
print(cov_file)
coverage <-read.table(file.path(mydir,cov_file))
head(coverage)
colnames(coverage) <- c("position","coverage")
id <- sub(".*interleaved2_", "", cov_file)
id <- sub(".dedup.tsv", "", id)
coverage$library=paste0(as.character(id))
df_to_fill <- rbind(df_to_fill,coverage)
}
# function to get numbers per library:
get_me_stats <- function(DF) {
out <- DF %>%
dplyr::summarise(min=min(coverage),
median=median(coverage),
mean=mean(coverage),
sd=sd(coverage),
max=max(coverage),
n_sites=n())
return(out)
}
df_to_fill %>%
group_by(library) %>%
get_me_stats()
mydir <- "~/Desktop/MG1655/goal_hackflex/saureus/"
phred_dir <- "~/Desktop/MG1655/raw_libs/"
# Coverage:
cov_files <- grep(list.files(mydir,pattern="^reduced"),
pattern='.tsv', value=TRUE)
# Coverage:
# construct an empty dataframe to build on
df_to_fill <- data.frame(
position = numeric(),
coverage = numeric(),
library = character(),
stringsAsFactors = FALSE
)
for (cov_file in cov_files) {
print(cov_file)
coverage <-read.table(file.path(mydir,cov_file))
head(coverage)
colnames(coverage) <- c("position","coverage")
id <- sub(".*interleaved2_", "", cov_file)
id <- sub(".dedup.tsv", "", id)
coverage$library=paste0(as.character(id))
df_to_fill <- rbind(df_to_fill,coverage)
}
# function to get numbers per library:
get_me_stats <- function(DF) {
out <- DF %>%
dplyr::summarise(min=min(coverage),
median=median(coverage),
mean=mean(coverage),
sd=sd(coverage),
max=max(coverage),
n_sites=n())
return(out)
}
df_to_fill %>%
group_by(library) %>%
get_me_stats()
